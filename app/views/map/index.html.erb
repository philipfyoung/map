<div id='map' class='group dark'></div>
<script type='text/javascript'>
  
          $(document).ready(function() {
  // Adjustment for map height and width based on windows height and width            
    $(window).on("resize", function() {
    $("#map").height($(window).height() - 45).width($(window).width());
    //map.invalidateSize();
    }).trigger("resize");

  
    // call for mapbox map
    //   var map = L.mapbox.map('map', "pyoung123.j4phf8n8").setView([
    //   41.3
    //   -72.9
    // ], 10)

    var api_key = "ID6qBkdNHXmshWA5hjc7QhlI9hZbp13LqVEjsn7hnIPmmJPjGm";
    var bboard = {
      routes : {},
      points : [],
      segments : {},
      bus_stops : {},
      bus_stop_arrival : {},
      buses : [],
      busLayer : new L.LayerGroup()
    };
    var osmLink = '<a href="http://openstreetmap.org">OpenStreetMap</a>',
        thunLink = '<a href="http://thunderforest.com/">Thunderforest</a>';

    var osmUrl = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
        osmAttrib = '&copy; ' + osmLink + ' Contributors',
        landUrl = 'http://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png',
        thunAttrib = '&copy; '+osmLink+' Contributors & '+thunLink;

    var osmMap = L.tileLayer(osmUrl, {attribution: osmAttrib}),
        landMap = L.tileLayer(landUrl, {attribution: thunAttrib});
            
    var baseLayers = {
              "OSM Mapnik": osmMap,
              "Landscape": landMap
            };
            
    bboard.routes.blue_day = ["4000346", "4000342", "4000386", "4000354", "4000374"];
               
    function initializeApp(){
      console.info("Initializing App");
      initializeMap('map');

      refreshRouteSegmentCollection("blue_day",displayRoute);
      displayBusStops();
      updateBusLocations();
      displayBusLocations();

      window.setInterval(function(){
         updateBusLocations();
      }, 1000);
    }

    var initializeMap = function(targetEl){
      // initialize the map on the "map" div with a given center and zoom
      bboard.boundingBox = {"ne":{"lat":41.338347106423775,"lng":-72.87583351135254},
                            "sw":{"lat":41.29709015106298, "lng":-72.9616641998291}};

      var northEast = new L.LatLng(bboard.boundingBox.ne['lat'],bboard.boundingBox.ne['lng']),
          southWest = new L.LatLng(bboard.boundingBox.sw['lat'],bboard.boundingBox.sw['lng']),
          bounds    = new L.LatLngBounds(southWest, northEast);

      
      bboard.map = L.map('map', {
              layers: [osmMap],
              center: bounds.getCenter()
              }).setView([41.311182,-72.925793], 14);
            
      
            // Layers for Control
            var transLoc = new L.LayerGroup();
            var academic = new L.LayerGroup();
            var parking = new L.LayerGroup();
            var zipcar = new L.LayerGroup();
            var admin = new L.LayerGroup();
            
            var markerAdmin = L.icon({
                iconUrl: 'assets/admin.png',
                //iconRetinaUrl: 'my-icon@2x.png',
                iconSize: [30, 30]
            });
      
            var markerParking = L.icon({
                iconUrl: 'assets/parking.png',
                //iconRetinaUrl: 'my-icon@2x.png',
                iconSize: [30, 30]
            });
      
             var markerAcademic = L.icon({
                iconUrl: 'assets/academic.png',
                //iconRetinaUrl: 'my-icon@2x.png',
                iconSize: [30, 30]
            });
      
            // markers
            // admin
            L.marker([41.32242155, -72.92209625], { icon: markerAdmin }).bindPopup('Betts House').addTo(admin),
            L.marker([41.32192199, -72.92140961], { icon: markerAdmin }).bindPopup('Greenberg Conference Center').addTo(admin),
            L.marker([41.30992934, -72.93112189], { icon: markerAdmin }).bindPopup('Rose Alumni House').addTo(admin),
            L.marker([41.3159894, -72.92874813], { icon: markerAdmin }).bindPopup('Rose Center').addTo(admin);
      
            // markers
            // parking
            L.marker([41.30799113, -72.9325515], { icon: markerParking }).bindPopup('Chapel-York Garage').addTo(parking),
            L.marker([41.30193839, -72.936261], { icon: markerParking }).bindPopup('Howard Avenue Garage').addTo(parking),
            L.marker([41.31787902, -72.924757], { icon: markerParking }).bindPopup('Prospect-Sachem Garage').addTo(parking),
            L.marker([41.31941002, -72.92033136], { icon: markerParking }).bindPopup('Pierson-Sage Garage').addTo(parking);
      
            // markers
            // academic
            L.marker([41.30234945, -72.93272585], { icon: markerAcademic }).bindPopup('Boyer Center').addTo(academic),
            L.marker([41.30212578, -72.93397039], { icon: markerAcademic }).bindPopup('Brady Memorial Laboratory').addTo(academic),
            L.marker([41.3025993, -72.93496549], { icon: markerAcademic }).bindPopup('Clinic Building').addTo(academic),
            L.marker([41.30230915, -72.93566018], { icon: markerAcademic }).bindPopup('Dana Clinic Building').addTo(academic);
      
            // markers
            // transloc
            // ??
      
            // overlays - Text 
            var overlays = {
              "Administration": admin,
              "Academic": academic,
              "Parking": parking,
              "ZipCar": zipcar,
              "TransLoc": transLoc
            };
            
            // adds layer to map
            L.control.layers(baseLayers, overlays).addTo(bboard.map);
      
            // centers map on marker click
            bboard.map.on('popupopen', function(e) {
                var px = bboard.map.project(e.popup._latlng);
                px.y -= e.popup._container.clientHeight/2
                bboard.map.panTo(bboard.map.unproject(px),{animate: true});
            });
    };
       
    var refreshStopsData = function(){
      $.ajax({
        url: "https://transloc-api-1-2.p.mashape.com/stops.json?agencies=yale&callback=call&geo_area=41.3%2C-72.9%7C5000",
        dataType: 'jsonp',
        success: function(json){
          console.log("Success: Updated route segment data", json);
          bboard.bus_stop_arrivals = json['data'];
        },
        error: function(jqXHR, textStatus, errorThrown){
          console.log("Stop data error", jqXHR, textStatus, errorThrown);
        },
        beforeSend: function(xhr) {
        xhr.setRequestHeader("X-Mashape-Authorization", api_key);
    }
      });
    };

    var displayArrivalTimes = function(){
      //&stops=4013038
    }

    var displayRoute = function(route_segment_keys){
      $.each(route_segment_keys, function(k,v){
        console.log("Building segment: ", bboard.segments[v]);
        bboard.blue_route_polyline = new L.MultiPolyline([], {color: '#03f', weight: 5, opacity: 0.04});
       addPolylineFromEncodedString(bboard.segments[v]);
        bboard.map.addLayer(bboard.blue_route_polyline);
      });
    }

    function refreshRouteSegmentCollection(route, callback){
     $.ajax({
        url: "https://transloc-api-1-2.p.mashape.com/segments.json?agencies=yale&callback=call&geo_area=41.3%2C-72.9%7C5000&routes=4000346%2C4000342%2C4000386%2C4000354%2C4000374",
        dataType: 'json',
        success:function(json){
          console.log("Success: Updated route segment data", json['data']);
          bboard.segments = json['data'];
          addPolylineFromEncodedString(bboard.segments);
          if(callback){
            callback(bboard.routes[route]);
          }
        },
        error: function(jqXHR, textStatus, errorThrown){
          alert("Segment data error");
        },
        beforeSend: function(xhr) {
        xhr.setRequestHeader("X-Mashape-Authorization", api_key);
    }
      });
    } 

    // takes in encoded segments - decodes to lat/lng - adds polyline to leaflet
    function addPolylineFromEncodedString(encodedString){
      $.each(encodedString, function(k, v) {
        var decodedString = L.Polyline.fromEncoded(encodedString[k]);
        var poly = L.polyline(decodedString._latlngs, {
              color: 'red',
                weight: 5,
                opacity: .8,
                dashArray: '0,0',
                //lineJoin: 'round'
            }).addTo(bboard.map);
             });
//         console.log(decodedString);
//         console.log(decodedString._latlngs[0].lat);
//         console.log(decodedString._latlngs[0].lng);
    } 

    function displayBusStops(){
     $.ajax({
        url:"https://transloc-api-1-2.p.mashape.com/stops.json?agencies=yale&callback=call&geo_area=41.3%2C-72.9%7C5000",
        dataType: 'json',
        success:function(json){
          console.log("Success: Updated bus stop data");
          bboard.bus_stops = json['data'];
          buildStops();
        },
        error: function(jqXHR, textStatus, errorThrown){
          alert("Bus Stop data error");
        },
        beforeSend: function(xhr) {
        xhr.setRequestHeader("X-Mashape-Authorization", api_key);
    }
      }); 
    }

    function buildStops(){
      bboard.stopsLayer = new L.LayerGroup();
      $.each(bboard.bus_stops, function(k, bus_stop){
        var ll = new L.LatLng(bus_stop['location']['lat'], bus_stop['location']['lng']);
        bboard.stopsLayer.addLayer(new L.CircleMarker(ll, {
          radius: 5
        }));
      });
      bboard.map.addLayer(bboard.stopsLayer);
    }

    function updateBusLocations(){
     $.ajax({
        url:"https://transloc-api-1-2.p.mashape.com/vehicles.json?agencies=yale&callback=call&geo_area=41.3%2C-72.9%7C5000&routes=4000346%2C4000342%2C4000386%2C4000354%2C3000374",
        dataType: 'json',
        success:function(json){
          bboard.buses = [];
          bboard.busLayer.clearLayers();

          $.each(json['data']['128'], function(k,v){
            var ll = new L.LatLng(v['location']['lat'], v['location']['lng']);
            var busMarker = new L.Marker(ll, {color:'#123'});
            bboard.buses.push(busMarker);
          });
          console.log(json['data']);
          displayBusLocations();
        },
        error:function(jqXHR, textStatus, errorThrown){
         console.log(jqXHR);
          
        },
        beforeSend: function(xhr) {
      xhr.setRequestHeader("X-Mashape-Authorization", api_key);
    }
      });
    }

    function displayBusLocations(){
      $.each(bboard.buses, function(key, bus){ 
        bboard.busLayer.addLayer(bus);
      });
      bboard.map.addLayer(bboard.busLayer);
    }

    $.ready(initializeApp());
          });
</script>